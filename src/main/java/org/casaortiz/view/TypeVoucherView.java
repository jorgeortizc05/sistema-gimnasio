/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.casaortiz.view;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.casaortiz.dao.TypePersonDao;
import org.casaortiz.dao.TypeVoucherDao;
import org.casaortiz.model.TypePerson;
import org.casaortiz.model.TypeVoucher;

/**
 * JPanel TypeVoucherView
 * Para manejar el CRUD de TypeVoucher
 * @author Ing. Jorge Luis Ortiz Cáceres
 * @since 31/08/2021
 * @version 0.0.1
 */
public class TypeVoucherView extends javax.swing.JPanel {

    private TypeVoucherDao typeVoucherDao;
    private TypeVoucher typeVoucher;
    public TypeVoucherView() {
        initComponents();
        typeVoucherDao = new TypeVoucherDao();
        loadTypePeople();
        btnSaveChanges.setVisible(false);
        btnDelete.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        txtTypeVaucher = new javax.swing.JTextField();
        label2 = new java.awt.Label();
        txtDescription = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tListTypeVauchers = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnSaveChanges = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        btnCleanForm = new javax.swing.JButton();
        lblWarning = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "TIPO DE COMPROBANTES"));

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Tipo Comprobante:");

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("Descripción:");

        tListTypeVauchers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoría", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tListTypeVauchers.getTableHeader().setReorderingAllowed(false);
        tListTypeVauchers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tListTypeVauchersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tListTypeVauchers);
        if (tListTypeVauchers.getColumnModel().getColumnCount() > 0) {
            tListTypeVauchers.getColumnModel().getColumn(0).setResizable(false);
            tListTypeVauchers.getColumnModel().getColumn(0).setPreferredWidth(5);
            tListTypeVauchers.getColumnModel().getColumn(1).setResizable(false);
            tListTypeVauchers.getColumnModel().getColumn(1).setPreferredWidth(300);
            tListTypeVauchers.getColumnModel().getColumn(2).setResizable(false);
            tListTypeVauchers.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnSaveChanges.setText("Guardar Cambios");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("ID:");

        lblID.setPreferredSize(new java.awt.Dimension(5, 20));

        btnCleanForm.setText("Limpiar Formulario");
        btnCleanForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanFormActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaveChanges)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCleanForm))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTypeVaucher, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(lblWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 136, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTypeVaucher)
                            .addComponent(lblWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCleanForm)
                    .addComponent(btnDelete)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSaveChanges)
                        .addComponent(btnSave)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Call TypeVoucherDao.insert()
     * Envia datos para guardar una TypeVoucher
     * @param evt - ActionPerformed: Al hacer clic en btnSave
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        TypeVoucher cat = new TypeVoucher();
        cat.setName(txtTypeVaucher.getText());
        cat.setDescription(txtDescription.getText());
        
        try {
            if(!txtTypeVaucher.getText().equals("")){
                typeVoucherDao.insert(cat);
                JOptionPane.showMessageDialog(btnSave, "Guardado correctamente");
                cleanForm();
                loadTypePeople();
            }else{
                lblWarning.setText("TypeVoucher no puede estar vacio");
                lblWarning.setForeground(Color.red);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(btnSave, "SQLException: Error al guardar: "+ex.toString());
        }catch(Exception e){
           JOptionPane.showMessageDialog(btnSave, "Exception: Error al guardar: "+e.getMessage()); 
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    
    /**
     * Call loadSearchTypePeople(txt)
     * Carga datos segun la busqueda
     * @param evt - KeyReleased: despues de escribir en el teclado busca
     */
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        loadSearchTypeVouchers(txtSearch.getText());
    }//GEN-LAST:event_txtSearchKeyReleased
    
    private void tListTypeVauchersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tListTypeVauchersMouseClicked
        // TODO add your handling code here:
        int fila = tListTypeVauchers.getSelectedRow();
        if(fila == -1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        }else{
            btnDelete.setVisible(true);
            btnSave.setVisible(false);
            btnSaveChanges.setVisible(true);
            try {
                typeVoucher = typeVoucherDao.getTypeVoucher(Integer.parseInt(tListTypeVauchers.getValueAt(fila, 0).toString()));
                lblID.setText(String.valueOf(typeVoucher.getId()));
                txtTypeVaucher.setText(typeVoucher.getName());
                txtDescription.setText(typeVoucher.getDescription());
            } catch (SQLException ex) {
                Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error al eliminar: " +ex.getMessage());
            } catch (Exception ex) {
                Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Error al eliminar: " +ex.getMessage());
            }
            
            
        }
    }//GEN-LAST:event_tListTypeVauchersMouseClicked
    
    /**
     * Call TypeVoucherDao.update(TypeVoucher cat)
     * Envia datos para actualizar una TypeVoucher
     * @param evt - ActionPerformed: Al hacer clic en btnSaveChanges
     */
    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        // TODO add your handling code here:
        TypeVoucher cat = new TypeVoucher();
        cat.setId(Integer.parseInt(lblID.getText()));
        cat.setName(txtTypeVaucher.getText());
        cat.setDescription(txtDescription.getText());
        try {
            if(!txtTypeVaucher.getText().equals("")){
                typeVoucherDao.update(cat);
                JOptionPane.showMessageDialog(btnSave, "Cambios guardados correctamente");
                cleanForm();
                loadTypePeople();
            }else{
                lblWarning.setText("TypeVoucher no puede estar vacio");
                lblWarning.setForeground(Color.red);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(btnSave, "Error al guardar los cambios: "+ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(btnSave, "Error al guardar los cambios: "+ex.getMessage());
        }
    }//GEN-LAST:event_btnSaveChangesActionPerformed
    
    /**
     * Call TypeVoucherDao.delete(idTypeVoucher)
     * Elimina un registro de TypeVoucher
     * @param evt - ActionPerformed: Al hacer clic en btnDelete
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int fila = tListTypeVauchers.getSelectedRow();
            if(fila == -1){
                JOptionPane.showConfirmDialog(tListTypeVauchers, "Debe seleccionar una fila");
            }else{
                // TODO add your handling code here:
                int estadoEliminacionDialog = JOptionPane.showConfirmDialog(btnDelete, 
                        "Seguro que desea eliminar "+typeVoucher.getName()+" ?",
                        "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(estadoEliminacionDialog == 0){
                    typeVoucherDao.delete(typeVoucher.getId());
                    JOptionPane.showMessageDialog(btnDelete, "Se elimino correctamente la TypeVoucher: " + typeVoucher);
                    loadTypePeople();
                    cleanForm();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(btnDelete, "Error al eliminar la TypeVoucher: " + typeVoucher +" Error: "+ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(btnDelete, "Error al eliminar la TypeVoucher: " + typeVoucher +" Error: "+ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    /**
     * Limpia el formulario del jPanel
     * @param evt - ActionPerformed: Click en btnCleanForm
     */
    private void btnCleanFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanFormActionPerformed
        // TODO add your handling code here:
        cleanForm();
    }//GEN-LAST:event_btnCleanFormActionPerformed
    
    /**
     * Vacia datos del jTable tListTypePeople
     */
    private void cleanTable(){
        DefaultTableModel modelo = (DefaultTableModel) tListTypeVauchers.getModel();
        modelo.setRowCount(0);
        tListTypeVauchers.setModel(modelo);
    }
    
    /**
     * Call TypeVoucherDao.getTypePeople()
     * Recupera datos TypeVoucher y lo carga al jTable
     */
    private void loadTypePeople(){
        try {
            loadTable(typeVoucherDao.getTypeVouchers());
        } catch (Exception ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al obtener datos de TypeVoucher: " +ex.getMessage());
        }
    }
    
    /**
     * Obtiene datos de TypeVoucherDao.searchTypePeople(text) y lo 
     * carga al jTable
     * @param text 
     */
    private void loadSearchTypeVouchers(String text){
        try {
            loadTable(typeVoucherDao.searchTypeVouchers(text));
        } catch (Exception ex) {
            Logger.getLogger(TypeVoucherView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al buscar en TypePerson: " +ex.getMessage());
        }
    }
    
    /**
     * Template para cargar datos al jTable tListTypeVoucher
     * @param List<TypeVoucher>
     */
    private void loadTable(List<TypeVoucher> typeVouchers){
        cleanTable();
        DefaultTableModel modelo = (DefaultTableModel) tListTypeVauchers.getModel();
        List<TypeVoucher> items = typeVouchers;
        Object rowData[] = new Object[3];
        for(TypeVoucher c: items){
            System.out.println(c);
            rowData[0] = c.getId();
            rowData[1] = c.getName();
            rowData[2] = c.getDescription();
            modelo.addRow(rowData);
        }
        tListTypeVauchers.setModel(modelo);
    }
    
    /**
     * Limpia todo el formulario del jPanel
     */
    private void cleanForm(){
        lblID.setText("");
        lblWarning.setText("");
        txtTypeVaucher.setText("");
        txtDescription.setText("");
        btnSave.setVisible(true);
        btnSaveChanges.setVisible(false);
        btnDelete.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCleanForm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTable tListTypeVauchers;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTypeVaucher;
    // End of variables declaration//GEN-END:variables
}
