--ORACLE DB
--Eliminacion de las tablas
DROP TABLE JORGE.CATEGORY PURGE;
DROP PACKAGE CATEGORY_API;

--Creacion de las tablas
create table category (
		id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
		name varchar(50) NOT NULL,
		description varchar(300),
		primary key (id)
	);

--Creacion de los procedimientos almacenados
create or replace PACKAGE category_api AS
	procedure ins (p_NAME in CATEGORY.NAME%type,p_DESCRIPTION in CATEGORY.DESCRIPTION%type default null);
	procedure upd (p_ID IN CATEGORY.ID%TYPE, p_NAME in CATEGORY.NAME%TYPE, p_DESCRIPTION in CATEGORY.DESCRIPTION%type default null);
	procedure del (p_ID in CATEGORY.ID%type);
	PROCEDURE LIST(CATEGORIES_C OUT SYS_REFCURSOR);
    procedure search(p_texto IN varchar2,CATEGORIES_C OUT SYS_REFCURSOR);
    procedure getCategory(p_id IN category.id%TYPE,CATEGORIES_C OUT SYS_REFCURSOR);
END category_api;
/
create or replace NONEDITIONABLE PACKAGE BODY category_api AS
	procedure ins (p_NAME in CATEGORY.NAME%type,p_DESCRIPTION in CATEGORY.DESCRIPTION%type default null) 
	is
	begin
		insert into CATEGORY(DESCRIPTION,NAME) values (p_DESCRIPTION,p_NAME);
		COMMIT;
	end;

	procedure del (p_ID in CATEGORY.ID%type) 
	IS
	BEGIN
		delete from CATEGORY where ID = p_ID;
		COMMIT;
	end;

	procedure upd (p_ID IN CATEGORY.ID%TYPE, p_NAME in CATEGORY.NAME%TYPE, p_DESCRIPTION in CATEGORY.DESCRIPTION%type default null) 
	is
	begin
		update CATEGORY set	DESCRIPTION = p_DESCRIPTION, NAME = p_NAME
		where ID = p_ID;
		COMMIT;
	end;

	PROCEDURE LIST(CATEGORIES_C OUT SYS_REFCURSOR)
	IS
	BEGIN 
		OPEN CATEGORIES_C FOR 
			SELECT * 
			FROM CATEGORY c;
	END LIST;
    
    procedure search(p_texto IN varchar2,CATEGORIES_C OUT SYS_REFCURSOR)
    IS
    BEGIN
        OPEN CATEGORIES_C FOR
            SELECT *
            FROM CATEGORY c
            WHERE UPPER(c.name) ||' '|| upper(c.description) like '%'||upper(p_texto)||'%';
    END;
    
    procedure getCategory(p_id IN category.id%TYPE,CATEGORIES_C OUT SYS_REFCURSOR)
    IS
    BEGIN
        OPEN CATEGORIES_C FOR
            SELECT *
            FROM CATEGORY c
            WHERE c.id = p_id ;
    END;

END category_api;